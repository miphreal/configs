#!{{ ROFI_VENV_PYTHON_BIN }}
import rofi_menu


projects_menu = rofi_menu.Menu(
    prompt="Projects",
    items=[
        rofi_menu.BackItem(),
        rofi_menu.ShellItem("lib/qcheck", "code-insiders ~/Develop/qcheck/"),
        rofi_menu.ShellItem("lib/gqltype", "code-insiders ~/Develop/gqltype/"),
        rofi_menu.ShellItem("lib/rofi-menu", "code-insiders ~/Develop/rofi-menu/"),
        rofi_menu.ShellItem("configs", "code-insiders ~/Develop/configs/"),
        rofi_menu.ShellItem("prj/meuskit", "code-insiders ~/Develop/meuskit/"),
        rofi_menu.ShellItem("prj/planner", "code-insiders ~/Develop/experiments/planner/"),
        rofi_menu.ShellItem("prj/elmenu", "code-insiders ~/Develop/experiments/elmenu/"),
        rofi_menu.ShellItem("prj/imagen", "code-insiders ~/Develop/imagen/imagen.code-workspace"),
        rofi_menu.ShellItem("prj/voxy", "code-insiders ~/Develop/voxy/voxy.code-workspace"),
        rofi_menu.ShellItem(
            "prj/openvpn-lightui", "code-insiders ~/Develop/experiments/openvpn-lightui/"
        ),
        rofi_menu.ShellItem(
            "prj/uhtishka", "code-insiders ~/Develop/crm-owl/"
        ),
    ],
)


system_menu = rofi_menu.Menu(
    prompt="Sys",
    items=[
        rofi_menu.ShellItem("Lock screen", "i3lock -i ~/.config/i3/bg.png", icon="system-lock-screen"),
        rofi_menu.ShellItem("Sleep", "systemctl suspend", icon="sleep"),
        rofi_menu.ShellItem("Reboot", "systemctl reboot", icon="gnome-session-reboot"),
        rofi_menu.NestedMenu(
            "Logout",
            icon="system-log-out",
            menu=rofi_menu.Menu(
                prompt="Logout",
                items=[
                    rofi_menu.ShellItem(
                        "Yes", "i3-msg exit", flags={rofi_menu.FLAG_STYLE_URGENT}
                    ),
                    rofi_menu.ExitItem("No", flags={rofi_menu.FLAG_STYLE_ACTIVE}),
                ],
            ),
        ),
    ],
)


main_menu = rofi_menu.Menu(
    prompt="menu",
    items=[
        rofi_menu.NestedMenu("Projects", projects_menu, icon="folder"),
        rofi_menu.TouchpadItem(),
        rofi_menu.NestedMenu(
            "Second monitor",
            rofi_menu.SecondMonitorMenu(),
            icon="preferences-desktop-display",
        ),
        rofi_menu.NestedMenu("System", system_menu, icon="system"),
    ],
)


if __name__ == "__main__":
    rofi_menu.run(main_menu)
